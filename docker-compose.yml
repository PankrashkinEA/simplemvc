version: "3.1"
networks:
  backend-network:
    driver: bridge
services:
  app:
    build:
      context: ./services/php
    volumes:
      - ${HOME}/.ssh:/home/www-data/.ssh
      - ./src:/var/www
      - ./services/php/php.ini:/usr/local/etc/php/conf.d/40-custom.ini
    links:
      - db
      - memcached
      - es01
      - kib01
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    networks:
      - backend-network
  webserver:
    image: nginx:alpine
    ports:
      - ${HTTP_PORT}:80
    volumes:
      - ./src:/var/www
      - ./services/nginx:/etc/nginx/conf.d
    links:
      - app
    networks:
      - backend-network
  db:
    image: postgres:10-alpine
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - ./services/pgsql/data:/var/lib/postgresql/data
    networks:
      - backend-network
  memcached:
    image: memcached:1.4-alpine
    ports:
      - 11211:11211
    networks:
      - backend-network 
  redis:
    image: redis:6-alpine
    ports:
      - 6379:6379
    networks:
      - backend-network
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
      - ./elasticsearch/hunspell:/usr/share/elasticsearch/config/hunspell
    ports:
      - 9200:9200
    networks:
      - backend-network 
  kib01:
    image: docker.elastic.co/kibana/kibana:7.11.0
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: '["http://es01:9200"]'
    networks:
      - backend-network 
volumes:
  data01:
    driver: local






  
